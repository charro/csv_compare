name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build release
        run: cargo build --release

      - name: Prepare artifact (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euo pipefail
          BIN_NAME="csv-compare"
          mkdir -p dist
          cp "target/release/${BIN_NAME}" "dist/${BIN_NAME}"
          cd dist
          tar -czf "${BIN_NAME}-${{ runner.os }}.tar.gz" "${BIN_NAME}"
          rm -f "${BIN_NAME}"

      - name: Prepare artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $BinName = 'csv-compare.exe'
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item "target/release/$BinName" "dist/$BinName"
          Compress-Archive -Path "dist/$BinName" -DestinationPath "dist/csv-compare-Windows.zip" -Force
          Remove-Item "dist/$BinName"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
